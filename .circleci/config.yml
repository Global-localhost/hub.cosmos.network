version: 2

set_build_image: &set_build_image
  working_directory: ~/repo
  docker:
    - image: circleci/node:10.15.0-stretch

deployment_config: &deployment_config
  working_directory: ~/repo
  docker:
    - image: tendermintdev/docker-website-deployment-yarn
  environment:
    BASH_ENV: /root/.bashrc
    AWS_REGION: us-east-1

s3_sync: &s3_sync
  run:
    name: Sync S3 bucket and invalidate CF distribution
    command: |
      cd workspace/dist
      echo "role_arn = $DEPLOYMENT_ROLE_ARN" >> /root/.aws/config
      echo "deployment job URL = $CIRCLE_BUILD_URL<br>" >> version.html
      aws s3 sync . s3://$WEBSITE_BUCKET --profile terraform --delete
      aws cloudfront create-invalidation --distribution-id $CF_DISTRIBUTION_ID --profile terraform --path "/*"

jobs:
  build:
    <<: *set_build_image
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-yarn-packages-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_BRANCH }}-{{ checksum "package.json" }}
      - run:
          name: Build website
          command: |
            yarn install
            yarn build
      - save_cache:
          paths:
            - yarn.lock
            - node_modules
          key: v1-yarn-packages-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_BRANCH }}-{{ checksum "package.json" }}
      - run:
          name: Create workspace folder
          command: |
            mkdir -p workspace
            echo "build job URL = $CIRCLE_BUILD_URL<br>" >> site/.vuepress/dist/version.html
            cp -r site/.vuepress/dist workspace/
      - persist_to_workspace:
          root: workspace
          paths:
            - dist

  deploy-staging:
    <<: *deployment_config
    steps:
      - attach_workspace:
          at: ~/repo/workspace
      - *s3_sync

  deploy-prod:
    <<: *deployment_config
    steps:
      - attach_workspace:
          at: ~/repo/workspace
      - *s3_sync

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy-staging:
          context: hub-website-deployment-staging
          requires:
            - build
          filters:
            branches:
              only: develop
      - deploy-prod:
          context: hub-website-deployment-prod
          requires:
            - build
          filters:
            branches:
              only: master
